// Generated by Haxe 4.0.0-rc.3
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var c = new pecan_Co(pecan_CoAction.Block([pecan_CoAction.Sync(function() {
		console.log("Main.hx:4:","nice");
		return;
	}),pecan_CoAction.Suspending(function(_) {
		return true;
	}),pecan_CoAction.Sync(function() {
		console.log("Main.hx:6:","foo");
		return;
	})]));
	console.log("Main.hx:8:","a");
	c.tick();
	console.log("Main.hx:10:","b");
	c.wakeup();
	console.log("Main.hx:12:","c");
};
Math.__name__ = true;
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var pecan_Co = function(action) {
	this.state = pecan_CoState.Ready;
	this.position = [0];
	this.action = action;
};
pecan_Co.__name__ = true;
pecan_Co.prototype = {
	getActionStack: function() {
		var last = null;
		last = { action : this.action};
		var stack = [last];
		var _g = 0;
		var _g1 = this.position;
		while(_g < _g1.length) {
			var index = _g1[_g];
			++_g;
			if(last.actions != null) {
				last = { action : last.actions[index]};
				stack.push(last);
			} else if(last.action != null) {
				var _g2 = last.action;
				if(_g2 == null) {
					throw new js__$Boot_HaxeError("!");
				} else if(_g2._hx_index == 2) {
					var b = _g2._;
					last = { actions : b};
					stack.push(last);
				} else {
					throw new js__$Boot_HaxeError("!");
				}
			}
		}
		return stack;
	}
	,getCurrentAction: function() {
		var stack = this.getActionStack();
		return stack[stack.length - 1].action;
	}
	,advanceAction: function() {
		var stack = this.getActionStack();
		stack.pop();
		var work = true;
		while(work && this.position.length > 0 && stack.length > 0) {
			work = false;
			var top = stack[stack.length - 1];
			if(top.actions == null) {
				throw new js__$Boot_HaxeError("!");
			}
			if(++this.position[this.position.length - 1] >= top.actions.length) {
				this.position.pop();
				stack.pop();
				if(stack.length > 0) {
					var _g = stack[stack.length - 1].action;
					if(_g != null) {
						if(_g._hx_index == 2) {
							var _g1 = _g._;
							this.position.pop();
						}
					}
				}
				stack.pop();
				work = true;
			}
		}
		if(this.position.length == 0 || stack.length == 0) {
			return false;
		}
		return true;
	}
	,tick: function() {
		if(this.state != pecan_CoState.Ready) {
			return;
		}
		if(this.position.length == 0) {
			this.terminate();
			return;
		}
		var tickMore = true;
		while(tickMore) {
			var nextAction = true;
			var current = this.getCurrentAction();
			switch(current._hx_index) {
			case 0:
				var f = current._;
				f();
				tickMore = true;
				break;
			case 1:
				var f1 = current._;
				if(f1($bind(this,this.wakeup))) {
					this.suspend();
				}
				tickMore = this.state != pecan_CoState.Suspended;
				break;
			case 2:
				var b = current._;
				nextAction = false;
				this.position.push(0);
				tickMore = true;
				break;
			}
			if(nextAction && !this.advanceAction()) {
				tickMore = false;
			}
		}
	}
	,suspend: function() {
		this.state = pecan_CoState.Suspended;
	}
	,wakeup: function() {
		if(this.state == pecan_CoState.Terminated) {
			return;
		}
		this.state = pecan_CoState.Ready;
		this.tick();
	}
	,terminate: function() {
		this.state = pecan_CoState.Terminated;
	}
};
var pecan_CoAction = $hxEnums["pecan.CoAction"] = { __ename__ : true, __constructs__ : ["Sync","Suspending","Block"]
	,Sync: ($_=function(_) { return {_hx_index:0,_:_,__enum__:"pecan.CoAction",toString:$estr}; },$_.__params__ = ["_"],$_)
	,Suspending: ($_=function(_) { return {_hx_index:1,_:_,__enum__:"pecan.CoAction",toString:$estr}; },$_.__params__ = ["_"],$_)
	,Block: ($_=function(_) { return {_hx_index:2,_:_,__enum__:"pecan.CoAction",toString:$estr}; },$_.__params__ = ["_"],$_)
};
var pecan_CoState = $hxEnums["pecan.CoState"] = { __ename__ : true, __constructs__ : ["Ready","Suspended","Terminated"]
	,Ready: {_hx_index:0,__enum__:"pecan.CoState",toString:$estr}
	,Suspended: {_hx_index:1,__enum__:"pecan.CoState",toString:$estr}
	,Terminated: {_hx_index:2,__enum__:"pecan.CoState",toString:$estr}
};
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $global.$haxeUID++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
if(typeof $global.$haxeUID == "undefined") $global.$haxeUID = 0;
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Main.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
